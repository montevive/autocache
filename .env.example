# Autocache Configuration
# Copy this file to .env and configure your settings

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server port (default: 8080)
PORT=8080

# Server host (default: 0.0.0.0)
HOST=0.0.0.0

# =============================================================================
# ANTHROPIC API CONFIGURATION
# =============================================================================

# Your Anthropic API key (required for requests without Authorization header)
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-api03-...

# Anthropic API base URL (default: https://api.anthropic.com)
ANTHROPIC_API_URL=https://api.anthropic.com

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# Cache strategy: conservative | moderate | aggressive (default: moderate)
# - conservative: Only cache system prompts and tools (2 breakpoints max)
# - moderate: Cache system, tools, and large content (3 breakpoints max)
# - aggressive: Use all 4 breakpoints for maximum caching
CACHE_STRATEGY=moderate

# Maximum cache breakpoints (1-4, default: 4)
# Anthropic allows up to 4 cache breakpoints per request
MAX_CACHE_BREAKPOINTS=4

# Token multiplier for caching threshold (default: 1.0)
# Values > 1.0 make caching more conservative
# Values < 1.0 make caching more aggressive
TOKEN_MULTIPLIER=1.0

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: trace | debug | info | warn | error | fatal | panic (default: info)
LOG_LEVEL=info

# Use JSON logging format: true | false (default: false)
# Set to true for structured logging in production
LOG_JSON=false

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable metrics endpoint: true | false (default: true)
ENABLE_METRICS=true

# Enable detailed ROI calculation: true | false (default: true)
ENABLE_DETAILED_ROI=true

# =============================================================================
# DOCKER COMPOSE VARIABLES
# =============================================================================

# Build time (set automatically by docker-compose)
# BUILD_TIME=2024-01-01T00:00:00Z

# Git commit (set automatically by docker-compose)
# GIT_COMMIT=abc123def456

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Development setup with debug logging
# LOG_LEVEL=debug
# CACHE_STRATEGY=moderate

# Production setup with JSON logging
# LOG_LEVEL=info
# LOG_JSON=true
# CACHE_STRATEGY=aggressive

# Conservative setup for cost control
# CACHE_STRATEGY=conservative
# MAX_CACHE_BREAKPOINTS=2
# TOKEN_MULTIPLIER=1.5

# Aggressive setup for maximum savings
# CACHE_STRATEGY=aggressive
# MAX_CACHE_BREAKPOINTS=4
# TOKEN_MULTIPLIER=0.8

# =============================================================================
# USAGE NOTES
# =============================================================================

# 1. API Key Priority:
#    - If client sends Authorization header, it will be used
#    - Otherwise, ANTHROPIC_API_KEY from this file will be used
#    - At least one must be configured

# 2. Cache Strategy Details:
#    - Conservative: Only caches very stable content (system prompts, tools)
#    - Moderate: Balances caching with cost efficiency
#    - Aggressive: Maximizes caching for highest savings

# 3. Token Multiplier:
#    - 1.0 = Use standard Anthropic minimums (1024/2048 tokens)
#    - 1.5 = Require 50% more tokens before caching
#    - 0.8 = Allow caching with 20% fewer tokens

# 4. Bypass Caching:
#    Add these headers to requests to bypass caching:
#    - X-Autocache-Bypass: true
#    - X-Autocache-Disable: true

# 5. Response Headers:
#    The proxy adds cache information to all responses:
#    - X-Autocache-Injected: true/false
#    - X-Autocache-ROI-Percent: savings percentage
#    - X-Autocache-ROI-BreakEven: requests to break even
#    - And more... (see README for full list)